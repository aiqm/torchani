name: ci

on: pull_request

env:
  TAG: ani-ci:${{ github.sha }}

jobs:
  build-image:
    runs-on: [self-hosted, ipickering]
    steps:
      - name: Build Docker image (with NO extensions)
        uses: docker/build-push-action@v5
        with:
          tags: ${{ env.TAG }}
  tools:
    needs: [build-image]
    runs-on: [self-hosted, ipickering]
    steps:
      - name: Inference benchmark
        run: docker run --rm --gpus all --ipc=host --ulimit memlock=-1 --ulimit stack=67108864 ${{ env.TAG }} bash -c "python tools/inference-benchmark.py --no-tqdm"
      - name: COMP6v1 accuracy benchmark
        run: docker run --rm --gpus all --ipc=host --ulimit memlock=-1 --ulimit stack=67108864 ${{ env.TAG }} bash -c "python tools/comp6v1-accuracy-benchmark.py --no-tqdm"
      - name: Training benchmark (with Nsight dry run)
        run: docker run --rm --gpus all --ipc=host --ulimit memlock=-1 --ulimit stack=67108864 ${{ env.TAG }} bash -c "python tools/training-benchmark.py --nvtx --no-tqdm"
      - name: MD Benchmark (with Nsight dry run)
        run: docker run --rm --gpus all --ipc=host --ulimit memlock=-1 --ulimit stack=67108864 ${{ env.TAG }} bash -c "python tools/md-benchmark.py --nvtx --no-tqdm"
  tests:
    needs: [build-image]
    runs-on: [self-hosted, ipickering]
    steps:
      - run: docker run --rm --gpus '"device=none"' --ipc=host --ulimit memlock=-1 --ulimit stack=67108864 ${{ env.TAG }} bash -c "pytest ."
  docs:
    needs: [build-image]
    runs-on: [self-hosted, ipickering]
    steps:
      - run: docker run --rm --gpus '"device=none"' --ipc=host --ulimit memlock=-1 --ulimit stack=67108864 ${{ env.TAG }} bash -c "sphinx-build -W docs/src docs/build"
  mypy:
    needs: [build-image]
    runs-on: [self-hosted, ipickering]
    steps:
      - run: docker run --rm --gpus '"device=none"' ${{ env.TAG }} bash -c "mypy --install-types --non-interactive ."
  flake8:
    needs: [build-image]
    runs-on: [self-hosted, ipickering]
    steps:
      - run: docker run --rm --gpus '"device=none"' ${{ env.TAG }} bash -c "flake8 ."
  clang-format:
    needs: [build-image]
    runs-on: [self-hosted, ipickering]
    steps:
      - run: docker run --rm --gpus '"device=none"' ${{ env.TAG }} bash -c "cd ./torchani/csrc && clang-format -Werror -n *.cpp *.cuh *.h *.cu"
  remove-image:
    if: ${{ always() }}
    needs: [build-image, tools, tests, mypy, clang-format, flake8, docs]
    runs-on: [self-hosted, ipickering]
    steps:
      - run: docker image rm --force ${{ env.TAG }}

concurrency:
  group: ani-ci-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
