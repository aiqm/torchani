name: build_conda_docker

on:
  pull_request:
    paths:
      - 'setup.py'
      - 'torchani/csrc/**'
      - 'torchani/aev/**'
      - 'ci/**'
      - 'test/test_cuaev.py'
      - Dockerfile*
  push:
    branches:
      - master
    paths:
      - 'setup.py'
      - 'torchani/csrc/**'
      - 'torchani/aev/**'
      - 'ci/**'
      - 'test/test_cuaev.py'
      - Dockerfile*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_conda_docker:
    runs-on: [self-hosted, ipickering]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout torchani
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          submodules: recursive

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to NGC Container Registry
        uses: docker/login-action@v2
        with:
          registry: nvcr.io
          username: $oauthtoken
          password: ${{ secrets.NGC_API_KEY }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.conda
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}_conda:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Remove image
        if: ${{ always() }}
        continue-on-error: true
        run: docker image rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}_conda:latest

concurrency:
  group: build_conda_docker-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
