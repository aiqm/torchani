name: tools

on: pull_request

env:
  REGISTRY: ${{ github.repository }}
  IMAGE_NAME: 'tools'

jobs:
  tools:
    runs-on: [self-hosted, ipickering]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout torchani
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          submodules: recursive

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Inference benchmark
        run: >-
          docker run
          --rm
          --gpus all
          ${{ steps.meta.outputs.tags }}
          bash -c "python tools/inference-benchmark.py"

      - name: COMP6 benchmark
        run: >-
          docker run
          --rm
          --gpus all
          ${{ steps.meta.outputs.tags }}
          bash -c "python tools/comp6.py dataset/COMP6/COMP6v1/s66x8"

      - name: Training benchmark
        run: >-
          docker run
          --rm
          --gpus all
          ${{ steps.meta.outputs.tags }}
          bash -c "python tools/training-benchmark.py dataset/ani1-up_to_gdb4/ani_gdb_s01.h5"

      - name: Training benchmark (Nsight Systems)
        run: >-
          docker run
          --rm
          --gpus all
          ${{ steps.meta.outputs.tags }}
          bash -c "python tools/training-benchmark-nsys-profile.py --dry-run dataset/ani1-up_to_gdb4/ani_gdb_s01.h5"

      - name: Remove image
        if: ${{ always() }}
        continue-on-error: true
        run: docker image rm ${{ steps.meta.outputs.tags }}

concurrency:
  group: tools-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
